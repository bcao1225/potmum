- mode ||= :article
- comments = comments.map { |c| c.try(:decorate) || c }

ul.uk-list.comment-list
  - comments.each do |comment|
    li.comment-item id="comment-#{comment.id}" name="comment-#{comment.id}"
      .comment-header class=('small' if mode == :view)
        a.comment-avatar href=user_path(comment.user)
          img.avatar-image src=comment.user.avatar_url
        - if mode == :view
          .comment-article
            a href=user_path(name: comment.user.name)
              = comment.user.name
            | &nbsp;が&nbsp;
            a href=article_path(comment.article, name: comment.article.user.name)
              - if comment.article.private_item?
                i.fa.fa-lock
                | &nbsp;
              = comment.article.title
            | &nbsp;にコメント
        - else
          a.comment-author href=user_path(comment.user)
            = comment.user.name
          .comment-contribute
            = "#{comment.user.like_count} contribution"
        .comment-date
          a href="#{article_path(comment.article, name: comment.article.user.name)}#comment-#{comment.id}"
            = l(comment.created_at, format: :short)
          - if current_user == comment.user
            a.uk-margin-small-left href=comment_path(comment) data-method='delete' data-confirm='本当に削除してもよろしいですか？' title='削除する'
              i.fa.fa-close

      - if mode == :view
        .comment-body
          = truncate(strip_tags(comment.markdown_html), length: 64)
      - else
        .comment-body.markdown
          == comment.markdown_html
